<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.selenium</groupId>
  <artifactId>Micro2_Automation_Selenium</artifactId>
  <version>0.0.2-SNAPSHOT</version>
  
  <name>Selenium Automation testing framework baseline</name>
  <description>This framework designed by Alter,who is a contributor of the automatio testing world.</description>
  

  <!--  the build source code encoding  -->
   <properties> 
       <org.selenium-version>2.41.0</org.selenium-version>
       
       <testng.testsuite.dir>${project.basedir}/test-suite</testng.testsuite.dir>
       <testng.output.dir>test-output</testng.output.dir>
       <dailyreport.dir>test-result</dailyreport.dir>
       <log4j.dir>logs</log4j.dir>
       
         
       <xmlSuiteFile>${testng.testsuite.dir}/testng_template.xml</xmlSuiteFile>
       
       
       <standalone.name.jar>${project.artifactId}-${project.version}-STANDALONE.jar</standalone.name.jar>
       
         
       <jdk.version>1.7</jdk.version>
       <resources.encoding>UTF-8</resources.encoding>
       <sources.encoding>UTF-8</sources.encoding>
       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
       <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
       
       <!--  <maven.deploy.skip>true</maven.deploy.skip> -->
  </properties>
  
  <!-- All dependency jar file -->
  <dependencies>
	    <!-- selenium jar file -->
	  	<dependency>
	  		<groupId>org.seleniumhq.selenium</groupId>
	  		<artifactId>selenium-server</artifactId>
	  		<version>${org.selenium-version}</version>        
        </dependency>
   	
	  	<!-- log4j -->
	  	<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-api</artifactId>
		    <version>2.0-rc1</version>
	    </dependency>
	    <dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>2.0-rc1</version>
	    </dependency>    
	    <dependency>
			<groupId>log4j</groupId>
			<artifactId>apache-log4j-extras</artifactId>
			<version>1.2.17</version>
	    </dependency>
	    <!-- testNg -->          
	    <dependency>
		  <groupId>org.testng</groupId>
		  <artifactId>testng</artifactId>
		  <version>6.8.8</version>
	    </dependency>
	    <!-- Jsoup ,Which is used for analysis the html document -->
	    <dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.7.3</version>
	   </dependency>
	   <!--  java mail,which is used for sending email via java -->
	   <dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.5.0-b01</version>
	   </dependency>
	   
	   <!--  mysql ,which is used for connecting to mysql database -->
	   <dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.30</version>
	   </dependency>
	     
	    <!--  jacob ,which is a java bridge used to run the autoItX API -->                        
	    <dependency>
			<groupId>net.sf.jacob-project</groupId>
			<artifactId>jacob</artifactId>
			<version>1.14.3</version>
	   </dependency>
	   <!--  Jfreechart ,which can generate the chart picture as you want -->
	   <dependency>
		<groupId>jfree</groupId>
		<artifactId>jfreechart</artifactId>
		<version>1.0.13</version>
	   </dependency>
	   <!-- jxl(java excel api),which used for reading the excel test data -->
	   <dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
	   </dependency>

	   <dependency>
	   	<groupId>org.jcodec</groupId>
	   	<artifactId>jcodec</artifactId>
	   	<version>RELEASE</version>
	   </dependency>
  </dependencies>
  
  <build>
    <resources>
        <resource>
           <directory>src/main/resources</directory>
           <filtering>true</filtering>
        </resource>
    </resources>
   <!--  <pluginManagement> -->
      
    <!-- clean the environment -->
    
	 <plugins>
	 <!--    <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
                <execution>
                    <id>createThriftDir</id>
                    <phase>process-resources</phase>
                    <configuration>
                        <tasks>
                            <delete dir="${dailyreport.dir}"/>
                            <mkdir dir="${dailyreport.dir}"/>
                            <delete dir="${testng.testsuite.dir}"/>
                            <mkdir dir="${testng.testsuite.dir}"/>
                            <delete dir="${testng.output.dir}" />
                            <mkdir dir="${testng.output.dir}" />
                            <delete dir="${log4j.dir}" />
                            <mkdir dir="${log4j.dir}" />
                        </tasks>
                    </configuration>
                    <goals>
                        <goal>run</goal>
                    </goals>
                </execution>
            </executions>
        </plugin> -->
         
	    <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-clean-plugin</artifactId>
		    <version>2.5</version>
		    <configuration>
		      <filesets>
		        <fileset>		         
		          <directory>${project.basedir}</directory>
		          <includes>
		            <include>${dailyreport.dir}/*.*</include>
		            <include>${testng.output.dir}/*.*</include>
		            <include>${log4j.dir}/*.*</include>
		          </includes>
		        <!--   <excludes>
		            <exclude>**/important.log</exclude>
		            <exclude>**/another-important.log</exclude>
		          </excludes>-->
		          <followSymlinks>false</followSymlinks> 
		        </fileset>
		      </filesets>
		    </configuration>
         </plugin>
         <!-- compiler the JAVA source code -->        
	     <plugin>
	         <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-compiler-plugin</artifactId>
             <version>2.5.1</version>
             <configuration>
                    <encoding>UTF-8</encoding>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
              </configuration>             
	      </plugin>
	      <!-- build a execuable jar file to run the whole test suite -->	      
	      <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
					  <manifest>
						<addClasspath>true</addClasspath>
						<mainClass>com.selenium.run.RunTestNG</mainClass>
					  </manifest>
					</archive>
				</configuration>
	      </plugin>
	      <plugin>
                <groupId>org.dstovall</groupId>
                <artifactId>onejar-maven-plugin</artifactId>
                <version>1.4.4</version>
                <executions>
                    <execution>
                        <configuration>
                            <mainClass>com.selenium.run.RunTestNG</mainClass>
                            <!-- Optional -->
                            <onejarVersion>0.97</onejarVersion>
                            <!-- Optional, use only if you need to include native libraries (dll's) -->
                           <!-- <binlibs>
                                <fileSet>
                                    <directory>${project.build.directory}/dllextract</directory>
                                    <includes>
                                        <include>test.dll</include>
                                    </includes>
                                </fileSet>
                            </binlibs>  -->
                            <!-- Optional, default is false -->
                            <attachToBuild>true</attachToBuild>
                            <!-- Optional, default is "onejar" ${standalone.name.jar} -->
                            <classifier>onejar</classifier>
                            <filename>${standalone.name.jar}</filename> 
                        </configuration>
                        <goals>
                            <goal>one-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin> 
            <!-- start the selenium server from the maven file -->    
	    <!--   <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start-server</goal>
						</goals>
						<configuration>
							<background>true</background>
							<logOutput>true</logOutput>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
			
	       <!--  run the testNG testings -->
	       <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-surefire-plugin</artifactId>
		        <version>2.17</version>
		        <configuration>
		           <forkMode>always</forkMode>
                   <systemPropertyVariables>
                         <reporter.debug>false</reporter.debug>                      
                   </systemPropertyVariables>
		           <suiteXmlFiles>
		              <suiteXmlFile>${xmlSuiteFile}</suiteXmlFile>
		           </suiteXmlFiles>
		        </configuration>
           </plugin> 
                
	  </plugins>
	<!-- </pluginManagement>  -->
  </build>
  <!--  this is the one-jar file used to build a execuable jar file -->
  <pluginRepositories>
        <pluginRepository>
            <id>onejar-maven-plugin.googlecode.com</id>
            <url>http://onejar-maven-plugin.googlecode.com/svn/mavenrepo</url>
        </pluginRepository>
    </pluginRepositories>
</project>